generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_INFORMATION")
}

// npx prisma migrate dev --name init
model User {
  id       String   @id @default(uuid())
  name     String
  email    String   @unique
  password String
  devices  Device[]
}

model Device {
  id         String     @id @default(uuid())
  accessCode String     @unique
  name       String?
  sensors    Sensor[]
  actuators  Actuator[]
  user       User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String?
}

model Sensor {
  id                   String                @id @default(uuid())
  name                 String
  type                 String
  port                 Json
  data                 SensorData[]
  notificationTriggers NotificationTrigger[]
  triggers             ActuatorTrigger[]
  device               Device                @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  deviceId             String
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
}

model NotificationTrigger {
  id            String   @id @default(uuid())
  name          String
  type          String
  logicOperator String
  value         Float
  content       String
  sensor        Sensor   @relation(fields: [sensorId], references: [id], onDelete: Cascade)
  sensorId      String
  dataSource    String
  lastTriggered DateTime @default(dbgenerated("('2022-01-01 12:12:12')")) @db.DateTime(0)
}

model SensorData {
  id        String   @id @default(uuid())
  data      Json
  sensor    Sensor   @relation(fields: [sensorId], references: [id], onDelete: Cascade)
  sensorId  String
  createdAt DateTime @default(now())
}

model Actuator {
  id        String            @id @default(uuid())
  name      String
  type      String
  port      Int
  triggers  ActuatorTrigger[]
  device    Device            @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  deviceId  String
  createdAt DateTime          @default(now())
}

model ActuatorTrigger {
  id            String   @id @default(uuid())
  name          String
  action        String
  logicOperator String
  value         Float
  description   String
  sensor        Sensor   @relation(fields: [sensorId], references: [id], onDelete: Cascade)
  sensorId      String
  actuator      Actuator @relation(fields: [actuatorId], references: [id], onDelete: Cascade)
  actuatorId    String
  dataSource    String
}
